/* resources/modern.qss - Revised */

QWidget {
    /* Using a font stack for better cross-platform compatibility */
    font-family: "Segoe UI", -apple-system, BlinkMacSystemFont, Arial, sans-serif;
    font-size: 10pt;
}

QMainWindow {
    background-color: #f0f0f0; /* A light gray background */
}

QGroupBox {
    background-color: #ffffff;
    border: 1px solid #cccccc;
    border-radius: 5px;
    margin-top: 1ex; /* Space for the title */
    padding: 5px;
}

QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;
    padding: 0 5px;
    background-color: #f0f0f0;
    border-radius: 3px;
    /* Ensure title text color is readable */
    color: #333333;
}

QLabel {
    color: #333333;
}

QLineEdit, QTextEdit, QComboBox {
    border: 1px solid #cccccc;
    border-radius: 4px;
    padding: 5px;
    background-color: #ffffff;
    selection-background-color: #3498db; /* A nice blue for selection */
    selection-color: #ffffff;
}

QTextEdit {
    background-color: #fdfdfd; /* Slightly different for text areas if desired */
}

QPushButton {
    background-color: #3498db; /* A modern blue */
    color: white;
    border: none;
    border-radius: 4px;
    padding: 5px 10px;
    min-width: 80px;
}

QPushButton:hover {
    background-color: #2980b9; /* Darker blue on hover */
}

QPushButton:pressed {
    background-color: #1f618d; /* Even darker when pressed */
}

QCheckBox::indicator {
    width: 16px;
    height: 16px;
    border: 1px solid #cccccc;
    border-radius: 3px;
    background-color: #ffffff; /* Default background for unchecked */
}

QCheckBox::indicator:checked {
    background-color: #3498db;
    /*
     * IMPORTANT: The path below uses Qt's built-in resources.
     * This might not work reliably on all systems or PySide6 installations.
     * If the checkmark doesn't appear, you may need to:
     * 1. Find a reliable path to a checkmark image provided by your Qt/PySide6 installation, OR
     * 2. Place your own checkmark image (e.g., checkmark.png) in the 'resources' folder
     *    and use a relative path like: image: url(checkmark.png);
     */
    image: url(:/qt-project.org/styles/commonstyle/images/standardbutton-apply-16.png);
}

/*
 * Styling for the QComboBox dropdown area and the arrow icon.
 * The 'drop-down' subcontrol is the clickable area on the right.
 * The 'down-arrow' subcontrol is the icon displayed within the 'drop-down' area.
 */
QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right; /* Position the dropdown area to the top right */
    width: 20px; /* Make the dropdown area wide enough for the arrow */

    /* Style the border on the left side of the dropdown area */
    border-left-width: 1px;
    border-left-color: #cccccc;
    border-left-style: solid;

    /* Apply border radius to the right corners of the dropdown area */
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;

    /* Ensure the background is not transparent if you want a solid look */
    background-color: #ffffff; /* Match combobox background */
}

QComboBox::down-arrow {
    /*
     * IMPORTANT: The path below uses Qt's built-in resources.
     * This might not work reliably on all systems or PySide6 installations.
     * If the arrow doesn't appear, you may need to:
     * 1. Find a reliable path to an arrow image provided by your Qt/PySide6 installation, OR
     * 2. Place your own arrow image (e.g., arrow-down.png) in the 'resources' folder
     *    and use a relative path like: image: url(arrow-down.png);
     */
    image: url(:/qt-project.org/styles/commonstyle/images/arrow-down-16.png);

    /* Center the arrow within the dropdown area */
    subcontrol-origin: padding;
    subcontrol-position: center; /* Center the arrow icon */

    /* Remove any conflicting border/radius inherited or previously set */
    border: none;
    border-radius: 0px;
    width: 16px; /* Set the size of the arrow icon */
    height: 16px;
}


QStatusBar {
    background-color: #e0e0e0;
    color: #555555;
}

QSplitter::handle {
    background-color: #cccccc;
    height: 5px; /* For vertical splitter */
    width: 5px;  /* For horizontal splitter */
}

QSplitter::handle:hover {
    background-color: #bbbbbb;
}

/* Specific styling for forecast areas if needed */
/* Removed specific background color to match QLineEdit/QTextEdit default */
#StationHourlyForecastArea, #DailyForecastArea { /* Corrected ID for daily forecast */
    font-size: 9pt;
    /* background-color: #f9f9f9; */
}